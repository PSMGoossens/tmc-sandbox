# NOTE: Don't edit this file. Create a `site.yml` and override the settings there instead.

# User and group to run non-privileged processes as.
# These should own the web/ directory.
tmc_user: tmc
tmc_group: tmc

# Maximum number of sandboxes to run simultaneously
max_instances: 4

# Networking creates a TAP device for each instance and runs a private copy of
# dnsmasq and squid (HTTP proxy) on them. The TAP devices are named
# tap_tmc0, tap_tmc1, etc. for each instance. They get private IP ranges
# 192.168.100.*, 192.168.101.* etc (configurable_below).
network:
  enabled: true
  private_ip_range_start: 100
  dnsmasq: true
  squid: true


#
# The amount of RAM for each user-mode linux instance.
# About 20M of this is used by the virtualized environment.
# Program output must also fit here.
#
instance_ram: 256M

#
# The maximum output.txt size accepted.
#
max_output_size: 20M

#
# Seconds before the virtualized instance is forcibly killed (with SIGKILL).
#
timeout: 120

#
# Extra parameters to user-mode-linux.
# Can be used e.g. to configure virtual networks.
# If you want to give many parameters then write them as a YAML array.
#
extra_uml_args:

#
# A log file with debug information.
#
debug_log_file:

#
# An extra image file may be attached as ubdd.
# If specified, it is mounted to /ubdd as AUFS read-only + writable RAMdisk,
# like the root filesystem. The file will be non-exclusively flock()'ed while in use.
#
extra_image_ubdd:

#
# Plugins and their configurations.
# Relative paths are relative to this directory (`web/`).
# Read the files under `plugins/` for documentation of each plugin.
#
plugins:
  maven_cache:
    enabled: false
    # Image files. Autocreated if necessary.
    img1: cache/maven/1.img
    img2: cache/maven/2.img
    symlink: cache/maven/current.img
    # The plugin will copy projects and create lockfiles here.
    work_dir: cache/maven/work
    img_size: 1G  # When creating images if they don't exist
    tap_device: tap_mvncache
    tap_ip: 192.168.210.1
    # How long to permit one download task to last, in seconds.
    download_timeout: 300 # 5 minutes

