#!/bin/sh -e
# This is run instead of /sbin/init to just run the program and shut down asap

echo "Entering tmc-init"

export LANG="en_US.UTF-8"

EXERCISE_TAR=/dev/ubdb
OUTPUT_FILE=/dev/ubdc
WORKDIR=/tmc

# Ensure UML block device nodes exist
[ -e /dev/ubda ] || mknod /dev/ubda b 98 0
[ -e /dev/ubdb ] || mknod /dev/ubdb b 98 16
[ -e /dev/ubdc ] || mknod /dev/ubdc b 98 32

# Mount /proc and /sys
mount -t proc proc /proc
mount -t sysfs sys /sys

# Go to working dir
mkdir -p $WORKDIR
cd $WORKDIR

# Unzip exercise
tar xf $EXERCISE_TAR

# Create user and give permissions
useradd --system tmc
chown -R tmc $WORKDIR
chmod -R u+rX $WORKDIR

if `cat /proc/cmdline | grep -q tmc_run_bash`; then
  # Support exploring the VM interactively
  cd /
  /bin/bash
else
  # Compile and run the program
  echo "Starting tmc-run"
  EXIT_CODE=`( set +e; su tmc -c ./tmc-run > /dev/null 2>&1; echo $?; true )`
  echo "Completed tmc-run. Exit code: $EXIT_CODE"
fi

summarize_text_file() {
  [ -e $1 ] || touch $1
  LINES=`cat $1 | wc -l`
  if [ $LINES -gt 1000 ]; then
    head -n 500 $1 > "$1.head"
    tail -n 500 $1 > "$1.tail"
    cat "$1.head" > $1
    echo "..." >> $1
    echo "..." >> $1
    echo "..." >> $1
    cat "$1.tail" >> $1
    rm -f "$1.head" "$1.tail"
  fi
}

# Write the result
[ -e test_output.txt ] || touch test_output.txt
summarize_text_file stdout.txt
summarize_text_file stderr.txt

echo $EXIT_CODE > exit_code.txt

tar c test_output.txt exit_code.txt stdout.txt stderr.txt > $OUTPUT_FILE

# Shut down
echo "Shutting down..."
sync
exec halt -f
